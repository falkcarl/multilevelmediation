% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modmedmlm.R
\name{boot.modmed.mlm}
\alias{boot.modmed.mlm}
\title{Custom boot function for (moderated) mediation with 2-level multilevel models}
\usage{
boot.modmed.mlm(
  data,
  indices,
  L2ID,
  ...,
  type = "all",
  modval1 = NULL,
  modval2 = NULL,
  boot.lvl = c("both", "1", "2")
)
}
\arguments{
\item{data}{Data frame in long format.}

\item{indices}{\code{\link[boot]{boot}} requires the function signature to accept a vector of
index numbers and so this argument is required. If the index numbers are all in order starting at 1,
then the relevant model will be fit to the data without any resampling. If some other vector is supplied,
then resampling is done as described in details.}

\item{L2ID}{Name of column that contains grouping variable in 'data' (e.g., "SubjectID")}

\item{...}{Arguments passed to \code{modmed.mlm} to define the mediation analysis model.}

\item{type}{String that defines what information to extract from the model. Default and options are in \code{extract.modmed.mlm}.
As examples, "indirect" will compute the indirect effect, "all" will save all random and fixed effects for possible additional
computations, "indirect.diff" will compute the difference in the indirect effect at two values of a possible moderating variable.}

\item{modval1}{(Optional) Numeric. If the model has a moderator, this value will be passed to \code{extract.modmed.mlm}
to compute the indirect effect or other effects at that value. See \code{extract.modmed.mlm} for details.}

\item{modval2}{(Optional). If the model has a moderator, it is possible to compute the difference in the indirect
at two values of the moderator. If given and an appropriate option for such a difference is chosen for \code{type},
this value and that of \code{modval1} will be passed to \code{extract.modmed.mlm} to compute and save the difference.
This is useful for obtaining a CI for the difference in the indirect effect at two different levels of the moderator.}
}
\description{
Custom boot function for (moderated) mediation with 2-level multilevel models
}
\details{
TO DO. Implements custom function to do resampling at level 2, then level 1. For use with boot package.
  Capable of doing moderation as well. Need to detail which kinds of moderation, which mediation models (e.g., 1-1-1 only?).
  This resamples L2 units, then L1 units within each L2 unit
}
\examples{
\donttest{
## Mediation for 1-1-1 model
data(BPG06dat)

# Do bootstrapping... w/ parallel processing
# snow appears to work on Windows; something else may be better on Unix/Mac/Linux

#library(parallel)
#library(boot)
#ncpu<-6
#cl<-makeCluster(ncpu)

# bootstrap just the indirect effect
#boot.result<-boot(BPG06dat, statistic=boot.modmed.mlm, R=100,
# L2ID = "id", X = "x", Y = "y", M = "m",
# random.a=TRUE, random.b=TRUE, random.cprime=TRUE,
# type="indirect",
# parallel="snow",ncpus=ncpu,cl=cl)

# bootstrap all fixed and random effects (recommended)
#boot.result<-boot(BPG06dat, statistic=boot.modmed.mlm, R=100,
#   L2ID = "id", X = "x", Y = "y", M = "m",
# random.a=TRUE, random.b=TRUE, random.cprime=TRUE,
#   type="all",
#  parallel="snow",ncpus=ncpu,cl=cl)

#stopCluster(cl)

#boot.result$t0 # point estimates for everything based on original data
#boot.ci(boot.result, index=1, type="perc") # percentile interval of first element

# Point estimate and 95\% CI for indirect effect
#extract.boot.modmed.mlm(boot.result, type="indirect", ci.conf=.95)

# without cluster
# boot.result<-boot(BPG06dat, statistic=boot.modmed.mlm, R=5,
#   L2ID = "id", X = "x", Y = "y", M = "m",
#  random.a=TRUE, random.b=TRUE, random.cprime=TRUE,
#  type="indirect")

## Moderated mediation

data(simdat)
ncpu<-12
cl<-makeCluster(ncpu)

# Bootstrap w/ moderation of a and b paths

boot.result2<-boot(simdat, statistic=boot.modmed.mlm, R=10000,
 L2ID = "L2id", X = "X", Y = "Y", M = "M",
  random.a=TRUE, random.b=TRUE, random.cprime=TRUE,
  moderator = "mod", mod.a=TRUE, mod.b=TRUE,
  random.mod.a = TRUE, random.mod.b = TRUE,
  type="all",
  parallel="snow",ncpus=ncpu,cl=cl)

 test<-modmed.mlm(simdat,
 L2ID = "L2id", X = "X", Y = "Y", M = "M",
  random.a=TRUE, random.b=TRUE, random.cprime=TRUE,
  moderator = "mod", mod.a=TRUE, mod.b=TRUE,
  random.mod.a = TRUE, random.mod.b = TRUE)

stopCluster(cl)

# indirect effect point estimate and 95\% CI when moderator = 0
extract.boot.modmed.mlm(boot.result2, type="indirect")
extract.boot.modmed.mlm(boot.result2, type="indirect", modval1=0)

# indirect effect point estimate and 95\% CI when moderator = 1
extract.boot.modmed.mlm(boot.result2, type="indirect", modval1=1)

# indirect effect difference point estimate and 95\% CI
extract.boot.modmed.mlm(boot.result2, type="indirect.diff",
  modval1=0, modval2=1)

}
}
